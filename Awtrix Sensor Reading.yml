blueprint:
  name: Публикация состояния Telega Sensor
  description: Публикация состояния сенсора в MQTT с настройками
  domain: automation
  input:
    sensor_entity:
      name: Сенсор
      description: Выберите сенсор для отслеживания
      selector:
        entity:
          domain: sensor
    mqtt_topic:
      name: MQTT Топик
      description: Укажите топик для публикации
      default: "Awtrix/custom/parser_telega"
    text_color:
      name: Цвет текста
      description: Укажите цвет текста в формате HEX
      default: "#FF0000"
    text_repeat:
      name: Количество повторений
      description: Укажите количество повторений текста
      default: 1
    text_align:
      name: Выравнивание текста
      description: Выберите выравнивание текста
      default: "left"
      selector:
        select:
          options:
            - left
            - center
            - right

trigger:
  - platform: state
    entity_id: !input sensor_entity

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ states(!input.sensor_entity) | length < 8 }}"
        sequence:
          - service: mqtt.publish
            data:
              qos: "1"
              payload: |-
                {
                  "text": "{{ states(!input.sensor_entity) }}",
                  "color": "{{ !input.text_color }}",
                  "repeat": {{ !input.text_repeat }},
                  "pushIcon": 0,
                  "textCase": 0,
                  "textAlign": "{{ !input.text_align }}"
                }
              topic: !input mqtt_topic
      - conditions:
          - condition: template
            value_template: "{{ states(!input.sensor_entity) | length >= 8 }}"
        sequence:
          - service: mqtt.publish
            data:
              qos: "1"
              payload: |-
                {
                  "text": "{{ states(!input.sensor_entity) }}",
                  "color": "{{ !input.text_color }}",
                  "repeat": {{ !input.text_repeat }},
                  "pushIcon": 0,
                  "textCase": 0
                }
              topic: !input mqtt_topic
  - delay: '00:00:01'  # Короткая задержка перед удалением (1 секунда)
  - service: mqtt.publish
    data:
      qos: "1"
      payload: ""
      topic: !input mqtt_topic
